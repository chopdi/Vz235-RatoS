#############################################################################################################
### CONFIGURATION GENERATED BY THE RATOS CONFIGURATOR
### Everything below [include RatOS.cfg] will override default RatOS behavior
#############################################################################################################
[include RatOS.cfg]
[include Macros.cfg]
#############################################################################################################
### MACRO CONFIGURATION
### Configure the behavior of RatOS macros
### See: https://os.ratrig.com/docs/configuration/macros
#############################################################################################################
#############################################################################################################
[gcode_macro RatOS]
variable_relative_extrusion: False
variable_preheat_extruder: True
variable_calibrate_bed_mesh: True
variable_nozzle_priming: "primeblob"
variable_start_print_park_in: "back"
variable_start_print_park_z_height: 50
variable_end_print_park_in: "back"
variable_pause_print_park_in: "back"
variable_safe_home_x: "middle"
variable_safe_home_y: "middle"
variable_bed_margin_x: [0, 0]
variable_bed_margin_y: [0, 0]
variable_chamber_heater_enable: True                      
variable_chamber_heater_bed_temp: 110                     
variable_chamber_heater_preheating_temp: 80              
variable_chamber_heater_heating_temp_offset: 25           
variable_chamber_heater_control_external_heater: False    
variable_chamber_heater_air_circulation_enable: True      
variable_chamber_heater_air_circulation_fan_speed: 0.35   
variable_chamber_heater_air_circulation_y_pos: 117.5      
variable_chamber_heater_air_circulation_z_pos: 100        
variable_chamber_heater_extra_fan_speed: 1.0              
variable_chamber_heater_filter_fan_speed: 1.0
variable_beacon_bed_mesh_scv: 25                        # square corner velocity for bed meshing with proximity method
variable_beacon_contact_z_homing: False                 # Make all G28 calls use contact instead of proximity scan
variable_beacon_contact_start_print_true_zero: True     # Use contact to determine true Z=0 for the last homing move during START_PRINT
variable_beacon_contact_wipe_before_true_zero: True     # enables a nozzle wipe at Y10 before true zeroing
variable_beacon_contact_true_zero_temp: 150             # nozzle temperature for true zeroing
                                                        # WARNING: if you're using a smooth PEI sheet, be careful with the temperature

variable_beacon_contact_prime_probing: True             # probe for priming with contact method
variable_beacon_contact_expansion_compensation: True    # enables the nozzle thermal expansion compensation

variable_beacon_contact_bed_mesh: False                 # bed mesh with contact method
variable_beacon_contact_bed_mesh_samples: 2             # probe samples for contact bed mesh

variable_beacon_contact_z_tilt_adjust: False            # z-tilt adjust with contact method
variable_beacon_contact_z_tilt_adjust_samples: 2        # probe samples for contact z-tilt adjust

variable_beacon_scan_compensation_enable: True         # Enables the beacon scan compensation
variable_beacon_scan_compensation_profile: "Contact"    # The contact profile name for the scan compensation
variable_beacon_scan_compensation_probe_count: 15,15    # The contact probe count for the scan compensation

variable_beacon_contact_poke_bottom_limit: -1		    # The bottom limit for the contact poke test

[ratos_homing]
axes: xyz
z_hop: 20         # homing z-hop distance
z_hop_speed: 15   # homing z-hop speed


[ratos]
allow_unsupported_slicer_versions: True

[gcode_macro HOME_Z]
gcode:
    NOZZLE_CLEAN
	# config
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe %}

	# beacon contact config
	{% set beacon_contact_z_homing = true if printer["gcode_macro RatOS"].beacon_contact_z_homing|default(false)|lower == 'true' else false %}

	# parameter
	{% set X = true if params.X|lower == 'true' else false %}
	{% set Y = true if params.Y|lower == 'true' else false %}
	{% set Z = true if params.Z|lower == 'true' else false %}

	DEBUG_ECHO PREFIX="HOME_Z" MSG="x_homed: {x_homed}, y_homed: {y_homed}, z_probe: {z_probe}, beacon_contact_z_homing: {beacon_contact_z_homing}"

	# home z
	{% if Z or not Y and not X %}
		RATOS_ECHO MSG="Homing Z"
		{% if x_homed == False or y_homed == False %}
			{ action_emergency_stop("X and Y must be homed before homing Z") }
		{% else %}
			{% if z_probe == "stowable" %}
				DEPLOY_PROBE
				_MOVE_TO_SAFE_Z_HOME
				{% if printer.configfile.settings.beacon is defined and beacon_contact_z_homing %}
					BEACON_AUTO_CALIBRATE SKIP_MODEL_CREATION=1
					_MOVE_TO_SAFE_Z_HOME Z_HOP=True
				{% else %}
					G28 Z
				{% endif %}
				_Z_HOP
				STOW_PROBE
			{% else %}
				_MOVE_TO_SAFE_Z_HOME
				{% if printer.configfile.settings.beacon is defined and beacon_contact_z_homing %}
					BEACON_AUTO_CALIBRATE SKIP_MODEL_CREATION=1
					_MOVE_TO_SAFE_Z_HOME Z_HOP=True
				{% else %}
					G28 Z
				{% endif %}
				_Z_HOP
			{% endif %}
		{% endif %}
	{% endif %}

[gcode_macro _START_PRINT_BED_MESH]
 M106 S255
gcode:
    
	# Handle toolhead settings
	CACHE_TOOLHEAD_SETTINGS KEY="start_print_bed_mesh"
	SET_MACRO_TRAVEL_SETTINGS
    

	# parameter
	{% set idex_mode = params.IDEX_MODE|default('')|lower %}
	{% set X=[params.X0|default(-1)|float, params.X1|default(-1)|float] %}
	{% set Y=[params.Y0|default(-1)|float, params.Y1|default(-1)|float] %}

	DEBUG_ECHO PREFIX="_START_PRINT_BED_MESH" MSG="idex_mode: {idex_mode}, X: {X}, Y: {Y}"

	# config
	{% set printable_x_max = printer["gcode_macro RatOS"].printable_x_max|float %}
	{% if idex_mode == "copy" or idex_mode == "mirror" %}
		# in copy and mirror mode we mesh the whole x bed length of the print area
		# this is later needed for the live toohlead z-offset compensation
		# it should also be used for a sanity check
		# we should check if the secondary toolheads z-offset doesnt scratch the bed while shifting the toolheads and eventually raising the z-hop to prevent it
		{% set X=[0, printable_x_max] %}
	{% endif %}

	# beacon contact config
	{% set beacon_bed_mesh_scv = printer["gcode_macro RatOS"].beacon_bed_mesh_scv|default(25)|int %}
	{% set beacon_contact_bed_mesh_samples = printer["gcode_macro RatOS"].beacon_contact_bed_mesh_samples|default(2)|int %}
	{% set beacon_contact_bed_mesh = true if printer["gcode_macro RatOS"].beacon_contact_bed_mesh|default(false)|lower == 'true' else false %}
	{% if printer.configfile.settings.beacon is defined and not beacon_contact_bed_mesh %}
		SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={beacon_bed_mesh_scv}
	{% endif %}

	# calibrate bed mesh
	{% set default_profile = printer["gcode_macro RatOS"].bed_mesh_profile|default('ratos') %}
	{% if printer["gcode_macro RatOS"].calibrate_bed_mesh|lower == 'true' %}
		BED_MESH_CLEAR
		{% if printer["gcode_macro RatOS"].adaptive_mesh|lower == 'true' %}
			CALIBRATE_ADAPTIVE_MESH PROFILE={default_profile} X0={X[0]} X1={X[1]} Y0={Y[0]} Y1={Y[1]} T={params.T|int} BOTH_TOOLHEADS={params.BOTH_TOOLHEADS} IDEX_MODE={idex_mode}
		{% else %}
			{% if printer.configfile.settings.beacon is defined and beacon_contact_bed_mesh %}
				BED_MESH_CALIBRATE PROBE_METHOD=contact USE_CONTACT_AREA=1 SAMPLES={beacon_contact_bed_mesh_samples} PROFILE={default_profile} 
			{% else %}
				BED_MESH_CALIBRATE PROFILE={default_profile} 
				{% if printer.configfile.settings.beacon is defined %}
					_BEACON_APPLY_SCAN_COMPENSATION
				{% endif %}
			{% endif %}
		{% endif %}
		BED_MESH_PROFILE LOAD={default_profile}
	{% elif printer["gcode_macro RatOS"].bed_mesh_profile is defined %}
		BED_MESH_CLEAR
		BED_MESH_PROFILE LOAD={printer["gcode_macro RatOS"].bed_mesh_profile}
	{% endif %}

	# Handle toolhead settings
	RESTORE_TOOLHEAD_SETTINGS KEY="start_print_bed_mesh"
    M106 S0

[gcode_macro CALIBRATE_ADAPTIVE_MESH]
 M106 S255
gcode:
    
	# config
	{% set printable_y_max = printer["gcode_macro RatOS"].printable_y_max|float %}
	{% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
    

	# beacon contact config
	{% set beacon_contact_bed_mesh_samples = printer["gcode_macro RatOS"].beacon_contact_bed_mesh_samples|default(2)|int %}
	{% set beacon_contact_bed_mesh = true if printer["gcode_macro RatOS"].beacon_contact_bed_mesh|default(false)|lower == 'true' else false %}

	# idex mode
	{% set idex_mode = params.IDEX_MODE|default('')|lower %}
	{% set both_toolheads = true if params.BOTH_TOOLHEADS|default(true)|lower=='true' else false %}

	# get default mesh profile
	{% set default_profile = params.PROFILE %}

	# coordinates from the slicer start gcode
	{% set x0 = params.X0|default(-1)|float %}
	{% set y0 = params.Y0|default(-1)|float %}
	{% set x1 = params.X1|default(-1)|float %}
	{% set y1 = params.Y1|default(-1)|float %}

	RATOS_ECHO PREFIX="Adaptive Mesh" MSG="Recieved coordinates X0={x0} Y0={y0} X1={x1} Y1={y1}"

	{% if x0 >= x1 or y0 >= y1 %}
		# coordinates are invalid, fall back to full bed mesh
		RATOS_ECHO PREFIX="Adaptive Mesh" MSG="Invalid coordinates received. Please check your slicer settings. Falling back to full bed mesh."
		{% if printer.configfile.settings.beacon is defined and beacon_contact_bed_mesh %}
			BED_MESH_CALIBRATE PROBE_METHOD=contact USE_CONTACT_AREA=1 SAMPLES={beacon_contact_bed_mesh_samples} PROFILE={default_profile} 
		{% else %}
			BED_MESH_CALIBRATE PROFILE={default_profile} 
			{% if printer.configfile.settings.beacon is defined %}
				_BEACON_APPLY_SCAN_COMPENSATION
			{% endif %}
		{% endif %}
	{% else %}
		# get bed mesh config object
		{% set mesh_config = printer.configfile.config.bed_mesh %}

		# get configured bed mesh area
		{% set min_x = mesh_config.mesh_min.split(",")[0]|float %}
		{% set min_y = mesh_config.mesh_min.split(",")[1]|float %}
		{% set max_x = mesh_config.mesh_max.split(",")[0]|float %}
		{% set max_y = mesh_config.mesh_max.split(",")[1]|float %}

		# make sure mesh coordinates lie within the configured mesh area
		{% set mesh_x0 = [[x0, max_x]|min, min_x]|max %}
		{% set mesh_y0 = [[y0, max_y]|min, min_y]|max %}
		{% set mesh_x1 = [[x1, max_x]|min, min_x]|max %}
		{% set mesh_y1 = [[y1, max_y]|min, min_y]|max %}

		{% if mesh_x0 == min_x and mesh_y0 == min_y and mesh_x1 == max_x and mesh_y1 == max_y %}
			# coordinates are invalid, fall back to full bed mesh
			RATOS_ECHO PREFIX="Adaptive Mesh" MSG="Print is using the full bed, falling back to full bed mesh."
			{% if printer.configfile.settings.beacon is defined and beacon_contact_bed_mesh %}
				BED_MESH_CALIBRATE PROBE_METHOD=contact USE_CONTACT_AREA=1 SAMPLES={beacon_contact_bed_mesh_samples} PROFILE={default_profile} 
			{% else %}
				BED_MESH_CALIBRATE PROFILE={default_profile}
				{% if printer.configfile.settings.beacon is defined %}
					_BEACON_APPLY_SCAN_COMPENSATION
				{% endif %}
			{% endif %}
		{% else %}
			{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
				DEPLOY_PROBE
			{% endif %}
			# get configured probe count
			{% set probe_count_x = mesh_config.probe_count.split(",")[0]|int %}
			{% if mesh_config.probe_count.split(",")|length == 2 %}
					{% set probe_count_y = mesh_config.probe_count.split(",")[1]|int %}
			{% else %}
					{% set probe_count_y = mesh_config.probe_count.split(",")[0]|int %}
			{% endif %}

			# calculate mesh point resolution
			{% set probe_x_step = (max_x - min_x) / probe_count_x %}
			{% set probe_y_step = (max_y - min_y) / probe_count_y %}

			# calculate xy probe count
			{% set mesh_count_x = ([(mesh_x1 - mesh_x0) / probe_x_step, 3]|max)|int %}
			{% set mesh_count_y = ([(mesh_y1 - mesh_y0) / probe_y_step, 3]|max)|int %}
			{% set min_mesh_count = [mesh_count_x, mesh_count_y]|min %}
			{% set max_mesh_count = [mesh_count_x, mesh_count_y]|max %}

			# check algorithms
			{% set algorithm = mesh_config.algorithm %}
			{% if algorithm|lower == 'lagrange' and max_mesh_count > 6 %}
				RATOS_ECHO PREFIX="Adaptive Mesh" MSG="cannot exceed a probe_count of 6 when using lagrange interpolation. Falling back to bicubic interpolation."
				{% set algorithm = 'bicubic' %}
			{% endif %}
			{% if algorithm|lower == 'bicubic' and min_mesh_count < 4 %}
				{% if max_mesh_count > 6 %}
					RATOS_ECHO PREFIX="Adaptive Mesh" MSG="invalid probe_count option when using bicubic interpolation. Combination of 3 points on one axis with more than 6 on another is not permitted. Forcing minimum mesh count to be 4."
					{% set min_mesh_count = 4 %}
				{% else %}
					RATOS_ECHO PREFIX="Adaptive Mesh" MSG="bicubic interpolation with a probe_count of less than 4 points detected. Forcing lagrange interpolation."
					{% set algorithm = 'lagrange' %}
				{% endif %}
			{% endif %}

			{% set mesh_count_x = ([min_mesh_count, mesh_count_x]|max)|int %}
			{% set mesh_count_x = ([max_mesh_count, mesh_count_x]|min)|int %}
			{% set mesh_count_y = ([min_mesh_count, mesh_count_y]|max)|int %}
			{% set mesh_count_y = ([max_mesh_count, mesh_count_y]|min)|int %}

			{% set should_prime = printer["gcode_macro RatOS"].nozzle_priming == 'primeblob' %}
			{% if printer["dual_carriage"] is not defined %}
				# DEFAULT
				{% set probe_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printable_y_max) < printable_y_max / 2 %}
			{% else %}
				# IDEX
				{% set probe_first = printer["gcode_macro RatOS"].nozzle_prime_start_y|lower == "min" or printer["gcode_macro RatOS"].nozzle_prime_start_y|float(printable_y_max) < printable_y_max / 2 %}
			{% endif %}
			{% if printer.configfile.settings.beacon is defined and printer.configfile.settings.beacon.mesh_runs % 2 != 0 and probe_first %}
				{% set probe_first = false %}
			{% elif printer.configfile.settings.beacon is defined and printer.configfile.settings.beacon.mesh_runs % 2 == 0 and not probe_first %}
				{% set probe_first = true %}
			{% endif %}

			# probe for priming
			{% if should_prime and probe_first %}
				{% if printer["dual_carriage"] is not defined %}
					# DEFAULT
					PROBE_FOR_PRIMING
				{% else %}
					# IDEX
					{% if both_toolheads %}
						PROBE_FOR_PRIMING TOOLHEAD=0 IDEX_MODE={idex_mode}
						PROBE_FOR_PRIMING TOOLHEAD=1 IDEX_MODE={idex_mode}
					{% else %}
						PROBE_FOR_PRIMING TOOLHEAD={params.T|int} IDEX_MODE={idex_mode}
					{% endif %}
				{% endif %}
			{% endif %}

			# mesh
			RATOS_ECHO PREFIX="Adaptive Mesh" MSG="mesh coordinates X0={mesh_x0} Y0={mesh_y0} X1={mesh_x1} Y1={mesh_y1}"
			{% if printer.configfile.settings.beacon is defined and beacon_contact_bed_mesh %}
				BED_MESH_CALIBRATE PROBE_METHOD=contact USE_CONTACT_AREA=1 SAMPLES={beacon_contact_bed_mesh_samples} PROFILE={default_profile} ALGORITHM={algorithm} MESH_MIN={mesh_x0},{mesh_y0} MESH_MAX={mesh_x1},{mesh_y1} PROBE_COUNT={mesh_count_x},{mesh_count_y} RELATIVE_REFERENCE_INDEX=-1
			{% else %}
				BED_MESH_CALIBRATE PROFILE={default_profile} ALGORITHM={algorithm} MESH_MIN={mesh_x0},{mesh_y0} MESH_MAX={mesh_x1},{mesh_y1} PROBE_COUNT={mesh_count_x},{mesh_count_y} RELATIVE_REFERENCE_INDEX=-1
				{% if printer.configfile.settings.beacon is defined %}
					_BEACON_APPLY_SCAN_COMPENSATION
				{% endif %}
			{% endif %}
			
			# probe for priming
			{% if should_prime and not probe_first %}
				{% if printer["dual_carriage"] is not defined %}
					# DEFAULT
					PROBE_FOR_PRIMING
				{% else %}
					# IDEX
					{% if both_toolheads %}
						PROBE_FOR_PRIMING TOOLHEAD=0 IDEX_MODE={idex_mode}
						PROBE_FOR_PRIMING TOOLHEAD=1 IDEX_MODE={idex_mode}
					{% else %}
						PROBE_FOR_PRIMING TOOLHEAD={params.T|int} IDEX_MODE={idex_mode}
					{% endif %}
				{% endif %}
			{% endif %}

			# stow probe
			{% if printer["gcode_macro RatOS"].z_probe|lower == 'stowable' %}
				STOW_PROBE
			{% endif %}
			
		{% endif %}
	{% endif %}

    M106 S0


 




#############################################################################################################
### USER OVERRIDES & CUSTOM CONFIGURATION
### Anything custom you want to add, or RatOS configuration you want to override, do it here.
### This section is pre-populated with the most common settings you may want to change.
### See: https://os.ratrig.com/docs/configuration/includes-and-overrides
###
### It is recommended that you follow these steps to properly calibrate your printer:
### 0) Sanity check and PID Tuning: https://www.klipper3d.org/Config_checks.html
### 1) Z-offset calibration: run BEACON_RATOS_CALIBRATE to automatically calibrate your beacon for scan and contact.
###    IMPORTANT: Ensure the beacon is properly mounted and the nozzle and meltzone is clean by unloading
###    the filament (if it's loaded) and make sure there's no ooze or gunk on the nozzle when the hotend is at printing temperature.
### 2) Pressure Advance: https://www.klipper3d.org/Pressure_Advance.html
### 3) Skew Correction: https://www.klipper3d.org/Skew_Correction.html
### 4) Resonance Compensation: https://www.klipper3d.org/Resonance_Compensation.html
### RatOS has dedicated macro's to generate shaper graphs for deeper analysis (requires accelerometer).
### Use MEASURE_COREXY_BELT_TENSION to compare tension between belts, and use
### GENERATE_SHAPER_GRAPHS to generate the resonance graphs for analysing and manually entering input shaper
### configuration.
### You can run SHAPER_CALIBRATE to automatically calibrate your input shaper configuration, if you just want
### to get started.
### Additionally, you can use the Realtime Analysis Tool to analyze your printer's performance in real-time.
### Read more about klipper here: https://www.klipper3d.org/Overview.html
#############################################################################################################

##### Vz235############
#######################
[printer]
kinematics: corexy
max_velocity: 2500
max_accel: 30000
minimum_cruise_ratio: 0.5
square_corner_velocity: 20
max_z_velocity: 15
max_z_accel: 150

[gcode_macro RatOS]
variable_macro_travel_speed: 500
variable_macro_travel_accel: 10000
#------------------------------------------------- Input Shaper -------------------------------------------------
[input_shaper]
shaper_freq_x: 108.6
shaper_type_x: mzv
shaper_freq_y: 74.4
shaper_type_y: mzv
damping_ratio_x: 0.058
damping_ratio_y: 0.095



#---------------------------------------------------- X -----------------------------------------------------
# The A motor in the CoreXY system, located at the rear left of the printer
#------------------------------------------------------------------------------------------------------------
[stepper_x]
dir_pin: x_dir_pin        # Add ! in front of pin name to reverse the direction of stepper_x
rotation_distance: 40     # 40 for 20 tooth 2GT pulleys, 32 for 16 tooth 2GT pulleys
microsteps: 64
position_max: 235
position_endstop: 0
position_min: 0
homing_speed: 50
[tmc5160 stepper_x] 
interpolate: false
run_current: 1.6
stealthchop_threshold: 0
[stepper_x1]
step_pin: PE2 
dir_pin: !PE1 
enable_pin: !PE0 
rotation_distance: 40
microsteps: 64
full_steps_per_rotation: 200
[tmc5160 stepper_x1] 
cs_pin: PD4
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
##diag1_pin: PF1
sense_resistor: 0.022
interpolate: false
run_current: 1.6
stealthchop_threshold: 0 
#---------------------------------------------------- Y -----------------------------------------------------
# The B motor in the CoreXY system, located at the rear right of the printer
#------------------------------------------------------------------------------------------------------------
[stepper_y]
dir_pin: y_dir_pin        # Add ! in front of pin name to reverse the direction of stepper_y
rotation_distance: 40     # 40 for 20 tooth 2GT pulleys, 32 for 16 tooth 2GT pulleys
microsteps: 64
position_max: 232.5
position_endstop: 0
position_min: 0
homing_speed: 50
[tmc5160 stepper_y] 
interpolate: false
run_current: 1.6
stealthchop_threshold: 0

[stepper_y1]
step_pin: PB9
dir_pin: !PB8
enable_pin: !PB7
rotation_distance: 40
microsteps: 64
full_steps_per_rotation: 200
[tmc5160 stepper_y1] 
cs_pin: PD3
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
##diag1_pin: PF2
run_current: 1.6
sense_resistor: 0.022
stealthchop_threshold: 0
#############################################################################################################
### HOMING
#############################################################################################################
[include RatOS/z-probe/beacon.cfg]


# Physical X endstop configuration
[stepper_x]
endstop_pin: PF10 
[gcode_macro RatOS]
variable_homing_x: "endstop"

# Physical Y endstop configuration
[stepper_y]
endstop_pin: PC0
[gcode_macro RatOS]
variable_homing_y: "endstop"

#---------------------------------------------------- Z -----------------------------------------------------
# The left Z motor for the kinematic bed
#------------------------------------------------------------------------------------------------------------
[stepper_z]
dir_pin: z0_dir_pin      # Remove ! in front of pin name to reverse the direction of stepper_z
rotation_distance: 2      # 4 for TR8*4 lead screws
homing_speed: 10
position_min: -2
position_max: 169
[tmc5160 stepper_z]
run_current: 1.2


#---------------------------------------------------- Z1 ----------------------------------------------------
# The rear Z motor for the kinematic bed
#------------------------------------------------------------------------------------------------------------
[stepper_z1]
dir_pin: z1_dir_pin      # Remove ! in front of pin name to reverse the direction of stepper_z1
rotation_distance: 2      # 4 for TR8*4 lead screws
[tmc5160 stepper_z1]
run_current: 1.2

#---------------------------------------------------- Z2 ----------------------------------------------------
# The right Z motor for the kinematic bed
#------------------------------------------------------------------------------------------------------------
[stepper_z2]
dir_pin: z2_dir_pin      # Remove ! in front of pin name to reverse the direction of stepper_z2
rotation_distance: 2      # 4 for TR8*4 lead screws
[tmc5160 stepper_z2]
run_current: 1.2

#------------------------------------------------- EXTRUDER -------------------------------------------------
# The extruder motor used for pushing filament through the toolhead
#------------------------------------------------------------------------------------------------------------
[extruder]
dir_pin: !e_dir_pin        # Add ! in front of pin name to reverse the direction of extruder
rotation_distance: 35.8   # VzBot VZ-HextrudORT Plus default
pressure_advance: 0.03   # Check https://www.klipper3d.org/Pressure_Advance.html for pressure advance tuning.
sensor_type:MAX31865
sensor_pin: PC9
spi_bus: spi3a
rtd_nominal_r: 100
rtd_reference_r: 430
rtd_num_of_wires: 2
#control: pid
#pid_kp: 28.413
#pid_ki: 1.334
#pid_kd: 151.300
#------------------------------------------------- Heater Bed -------------------------------------------------
[heater_bed]
#control: pid
heater_pin: PF5
sensor_type: Generic 3950
sensor_pin: PC4
min_temp: 0 
pwm_cycle_time: 0.02 # 50hz for european AC, to avoid flickering lights.
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114

#------------------------------------------------- Chamber Heater -------------------------------------------------
[temperature_sensor chamber]
sensor_type: ATC Semitec 104NT-4-R025H42G
pullup_resistor: 4700
sensor_pin: PB0
min_temp: 0
max_temp: 80
#gcode_id: C: C
[heater_generic chamber_heater]
gcode_id: chamber_heater
heater_pin: PF8
smooth_time: 10
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PA7
control: pid
pid_kp: 24.750
pid_ki: 2.578
pid_kd: 59.400
pwm_cycle_time: 0.25
min_temp: 0
max_temp: 100
max_power: 1.0
[heater_fan chamber_heater_fan]
##	Chamber Fan - FAN8 24V Connector
pin: PA5
max_power: 1.0
kick_start_time: 0.5
heater: chamber_heater
heater_temp: 30.0
[verify_heater chamber_heater]
max_error: 100
check_gain_time: 100
hysteresis: 5
heating_gain: 2
#------------------------------------------------- Bed Edge Sensor -------------------------------------------------
[temperature_sensor bed_edge]
sensor_type:  ATC Semitec 104GT-2
pullup_resistor: 4700
sensor_pin: PB1
min_temp: 0
max_temp: 125
#------------------------------------------------- Stepper Driver Sensor -------------------------------------------------
[temperature_sensor Stepper_Driver_2160HV]
sensor_type: ATC Semitec 104NT-4-R025H42G
pullup_resistor: 4700
sensor_pin: PC5
min_temp: 0
max_temp: 100
#gcode_id: C: C
#------------------------------------------------- Fans -------------------------------------------------
# Hotend cooling fan
[heater_fan toolhead_cooling_fan]
heater: extruder
# 4-pin fan connected to 2-pin header on Kraken - digital pwm
pin: PA0
cycle_time:  0.00004
# Part cooling fan
[fan]
# 4-pin fan connected to 2-pin header on Kraken - digital pwm
pin: rpi:gpio26
max_power: 1
cycle_time: 0.002
hardware_pwm: false
shutdown_speed: 0
[fan_generic RSCS]
pin: PA4
max_power: 1
shutdown_speed: 0
kick_start_time: 0.1
off_below: 0.10
[fan_generic Exhaust_fan]
#  Nevermore - In E1 OUT Position
pin: PA3
max_power: 1.0
kick_start_time: 0.5
#------------------------------------------------- Bed Mesh -------------------------------------------------
[bed_mesh]
speed: 400
horizontal_move_z: 2
mesh_min: 30,28
mesh_max: 205,165
algorithm: bicubic
#fade_start: 1
#fade_end: 10
#split_delta_z: .025
#move_check_distance: 5
probe_count: 30,30
mesh_pps: 0,0
bicubic_tension: 0.1
zero_reference_position: 117.5 , 117.5
#------------------------------------------------- Z_Tilt -------------------------------------------------
[z_tilt]
 z_positions: #Kugeln
   -65.00, 0                
    112.50, 283                
    300, 0 
points: #Probpunkte
  20, 5      
  20, 165 
  215, 5

#------------------------------------------------- Resonance Tester -------------------------------------------------
[resonance_tester]
probe_points: 117.5, 117.5,20
#------------------------------------------------- Beacon -------------------------------------------------
[beacon]
serial:/dev/serial/by-id/usb-Beacon_Beacon_RevH_40708F584E5737374D202020FF113208-if00 
y_offset: 27.065
#   Y offset of beacon from the nozzle.
contact_max_hotend_temperature: 305 # increase to enable hot contacting
# Temperature limit for the hotend when contacting, override this for temps which may damage some surfaces.
backlash_comp: 0.04365

#------------------------------------------------- Neopixel -------------------------------------------------
[neopixel neo]
pin:PF12
chain_count:20
color_order:GRBW
initial_RED:0
initial_GREEN:0
initial_BLUE:1
initial_WHITE:0
[neopixel neo2]
pin:PF11
chain_count:5
color_order:GRB
initial_RED:0
initial_GREEN:0
initial_BLUE:1

[gcode_macro M106]
rename_existing: G106
gcode:
	{% if params.P is defined %}
		{% if params.P|int == 2 %}
			{% if params.S is defined %}
				{% if params.S|int == 255 %}
					{% set realspeed = 1 %}
				{% else %}
					{% if params.S|int == 0 %}
						{% set realspeed = 0 %}
					{% else %}
						{% set realspeed = params.S|float/255 %}
					{% endif %}
				{% endif %}
			{% else %}
				{% set realspeed = 1 %}
			{% endif %}

			SET_FAN_SPEED FAN=RSCS SPEED={realspeed}
		{% elif params.P|int == 3 %}
			{% if params.S is defined %}
				{% if params.S|int == 255 %}
					{% set realspeed = 1 %}
				{% else %}
					{% if params.S|int == 0 %}
						{% set realspeed = 0 %}
					{% else %}
						{% set realspeed = params.S|float/255 %}
					{% endif %}
				{% endif %}
			{% else %}
				{% set realspeed = 1 %}
			{% endif %}

			SET_FAN_SPEED FAN=Exhaust_fan SPEED={realspeed}
		{% endif %}
	{% else %}
		{% if params.S is defined %}
		  G106 S{params.S}
		{% else %}
		  G106 S255
		{% endif %}
	{% endif %}

[gcode_macro M107]
rename_existing: G107
gcode:
	{% if params.P is defined %}
	  {% if params.P|int == 2 %}
		SET_FAN_SPEED FAN=RSCS SPEED=0
	  {% elif params.P|int == 3 %}
		SET_FAN_SPEED FAN=Exhaust_fan SPEED=0
	  {% endif %}      
	{% else %}
	  SET_FAN_SPEED FAN=RSCS SPEED=0  
	  SET_FAN_SPEED FAN=Exhaust_fan SPEED=0  
	  G107
	{% endif %}


[servo servo_wiper]
pin: PE7
#   PWM output pin controlling the servo. This parameter must be
#   provided.
maximum_servo_angle: 180
#   The maximum angle (in degrees) that this servo can be set to. The
#   default is 180 degrees.
minimum_pulse_width: 0.0005
#   The minimum pulse width time (in seconds). This should correspond
#   with an angle of 0 degrees. The default is 0.001 seconds.
maximum_pulse_width: 0.0025
#   The maximum pulse width time (in seconds). This should correspond
#   with an angle of maximum_servo_angle. The default is 0.002
#   seconds.
initial_angle: 120
#   Initial angle (in degrees) to set the servo to. The default is to
#   not send any signal at startup.
#initial_pulse_width: 0.0025
#   Initial pulse width time (in seconds) to set the servo to. (This
#   is only valid if initial_angle is not set.) The default is to not
#   send any signal at startup.
#    

[gcode_macro NOZZLE_CLEAN]
gcode:
   SAVE_GCODE_STATE NAME=nozzle_clean_state
   M118 Start Wiping macro
   {% if printer.toolhead.position.z|int < 10 %}  
         G90           
         G0 Z20 F6000     
   {% endif %}
   M118 Deploy Servo
   SET_SERVO SERVO=servo_wiper ANGLE=25
   G90
   G1 X117.5 Y166.25 F10000
   M118 Start Wiping
   G1 x15 Y166.25 F12000
   G1 x45 Y168.25 F12000
   G1 x15 Y166.25 F12000
   G1 x45 Y164.25 F12000
   G1 x15 Y166.25 F12000
   G1 x45 Y168.25 F12000
   G1 x15 Y166.25 F12000
   G1 x45 Y164.25 F12000
   G1 x15 Y166.25 F12000
   G1 x45 Y168.25 F12000
   G1 x15 Y166.25 F12000
   G1 x45 Y164.25 F12000
   G1 x15 Y166.25 F12000
   M118 Wiping Done
   G90
   G1 X117.5 Y117.5 F12000
   G1 Y117.5 F12000
   M118 Retract Wiper
   SET_SERVO SERVO=servo_wiper ANGLE=120
   M118 Wiping finished
   G92 E0
   RESTORE_GCODE_STATE NAME=nozzle_clean_state

[delayed_gcode wiper]
initial_duration: 1
gcode:
   SET_SERVO SERVO=servo_wiper ANGLE=120



# In addition to the above glyphs, 16x4 displays also have the
# following hard-coded single character glyphs: right_arrow, degrees.


# REMEMBER TO CALIBRATE YOUR BEACON!
# Run BEACON_RATOS_CALIBRATE for automatic calibration.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.930
#*# pid_ki = 1.643
#*# pid_kd = 73.190
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 50.050
#*# pid_ki = 2.567
#*# pid_kd = 243.992
#*#
#*# [beacon model default]
#*# model_coef = 1.5838975255561598,
#*# 	1.8914950547957143,
#*# 	0.7390805274462932,
#*# 	0.3273733103978733,
#*# 	0.17885787777349232,
#*# 	0.23229739155462617,
#*# 	0.0367016157742688,
#*# 	-0.15965580669741006,
#*# 	0.06149494017354098,
#*# 	0.11231040840884175
#*# model_domain = 1.8856212481506885e-07,1.940262932246171e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 71.935195
#*# model_offset = 0.00000
#*#
#*# [bed_mesh Contact]
#*# version = 1
#*# points =
#*# 	  -0.179693, -0.193834, -0.183990, -0.195162, -0.202037, -0.197271, -0.197037, -0.187740, -0.181100, -0.134771, -0.170240, -0.162506, -0.167975, -0.149771, -0.113365
#*# 	  -0.132584, -0.137818, -0.139303, -0.170787, -0.171334, -0.190240, -0.173990, -0.178287, -0.154381, -0.139693, -0.140006, -0.143521, -0.103756, -0.096959, -0.111490
#*# 	  -0.134303, -0.151725, -0.140709, -0.146959, -0.156256, -0.162818, -0.156803, -0.150084, -0.124381, -0.120006, -0.091100, -0.107428, -0.088365, -0.096412, -0.072037
#*# 	  -0.099146, -0.124146, -0.140162, -0.147975, -0.124928, -0.147115, -0.123834, -0.115475, -0.098209, -0.107740, -0.067037, -0.091646, -0.065162, -0.071725, -0.064615
#*# 	  -0.079068, -0.103209, -0.113365, -0.109693, -0.132115, -0.115396, -0.121178, -0.120084, -0.093365, -0.096256, -0.062740, -0.066412, -0.037428, -0.042662, -0.015475
#*# 	  -0.071021, -0.107818, -0.088834, -0.105396, -0.117584, -0.116881, -0.111178, -0.092428, -0.072193, -0.065396, -0.070318, -0.038131, -0.030318, -0.047818, -0.038365
#*# 	  -0.079928, -0.085475, -0.102428, -0.110162, -0.096490, -0.066803, -0.101178, -0.094537, -0.069225, -0.071803, -0.054928, -0.045709, -0.038756, -0.024146, -0.003287
#*# 	  -0.054459, -0.065006, -0.087740, -0.102975, -0.086334, -0.069693, -0.064303, -0.063365, -0.083131, -0.063834, -0.062350, -0.037975, -0.014693, -0.014771, -0.012975
#*# 	  -0.065475, -0.080943, -0.081490, -0.065631, -0.087662, -0.091100, -0.078521, -0.066881, -0.057193, -0.047193, -0.047037, -0.025084, -0.021412, -0.015631, -0.006568
#*# 	  -0.023365, -0.050162, -0.064459, -0.071646, -0.067740, -0.077662, -0.070709, -0.059381, -0.058287, -0.031021, -0.035006, -0.037506, -0.025865, -0.016881, -0.012584
#*# 	  -0.043834, -0.046100, -0.077818, -0.066100, -0.060631, -0.078990, -0.073521, -0.058053, -0.047740, -0.049693, -0.032037, -0.015240, -0.000865, 0.001557, -0.002896
#*# 	  -0.028443, -0.040084, -0.040084, -0.051568, -0.044693, -0.072818, -0.044068, -0.070162, -0.049146, -0.041803, -0.012896, -0.030006, -0.017975, 0.000463, -0.007193
#*# 	  -0.027037, -0.052271, -0.063834, -0.017975, -0.037584, -0.047740, -0.049068, -0.069928, -0.043053, -0.033443, -0.020787, -0.030865, -0.016881, -0.004146, 0.009369
#*# 	  -0.036021, -0.029771, -0.026412, -0.044537, -0.055943, -0.036881, -0.049615, -0.041178, -0.038365, -0.029850, -0.018053, -0.019615, -0.001100, -0.006334, 0.015385
#*# 	  -0.027584, -0.029459, -0.049146, -0.032818, -0.021178, -0.041100, -0.030709, -0.035709, -0.013600, -0.027506, -0.031178, -0.038521, 0.007182, 0.024213, -0.008287
#*# x_count = 15
#*# y_count = 15
#*# mesh_x_pps = 0
#*# mesh_y_pps = 0
#*# algo = direct
#*# tension = 0.1
#*# min_x = 30.0
#*# max_x = 205.0
#*# min_y = 28.0
#*# max_y = 137.89999999999995
